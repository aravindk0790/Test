---
default:
  tags:
    - zimperium-hcs-runner
    
include:
  - template: Security/Container-Scanning.gitlab-ci.yml

variables: &global-variables
  HTTP_PROXY: http://proxy.local.dwpcloud.uk:3128
  HTTPS_PROXY: http://proxy.local.dwpcloud.uk:3128
  http_proxy: http://proxy.local.dwpcloud.uk:3128
  https_proxy: http://proxy.local.dwpcloud.uk:3128
  HELM_CHART_VERSION: 0.41.4
  AWS_REGION: "eu-west-2"
  

stages:
  - test
  - push

container_scanning:
  variables:
    CS_IMAGE: "${JFROG_REGISTRY}/${IMAGE}:${TAG}"
    CS_REGISTRY_USER: $JFROG_USERNAME
    CS_REGISTRY_PASSWORD: "$JFROG_PASSWORD"

# Job to push the docker image to HCS pdu-dev enviornment ecr repo
push-to-ecr-pdu-dev:
  stage: push
  image: docker:20.10.24-dind@sha256:7950b072fd43683938a3d73133d473b3c66d3687fe06ddf0c0d2b7f35e289f17
  services:
    - name: docker:dind@sha256:29f11c7c63c84a51c45901701c2d16336c9abc6365d3a69136884b3cf15e2cc9
      command: ["--registry-mirror=https://docker-cache.nonprod.dwpcloud.uk:5000"]
  tags:
    - docker-in-docker
  before_script:
     - apk update
     - apk add --no-cache aws-cli
  script:
     # Assume EKS Namespace Role		
     - TEMP_ROLE=$(aws sts assume-role --role-arn arn:aws:iam::${AWS_ACCOUNT}:role/${AWS_ROLE} --role-session-name hcs-eks-runner-eks)
     - export AWS_ACCESS_KEY_ID=$(echo $TEMP_ROLE | jq -r .Credentials.AccessKeyId)
     - export AWS_SECRET_ACCESS_KEY=$(echo $TEMP_ROLE | jq -r .Credentials.SecretAccessKey)
     - export AWS_SESSION_TOKEN=$(echo $TEMP_ROLE | jq -r .Credentials.SessionToken)
     - aws ecr get-login-password | docker login --username AWS --password-stdin ${AWS_ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ENVIRONMENT}/tenant/mobility-zimperium
     - docker login -u "$JFROG_USERNAME" -p "$JFROG_PASSWORD" "$JFROG_REGISTRY"
     - docker pull "$JFROG_REGISTRY/${IMAGE}:${TAG}"
     - docker tag "$JFROG_REGISTRY/${IMAGE}:${TAG}" 943009210227.dkr.ecr.${AWS_REGION}.amazonaws.com/eks-pdu-test-mobility-namespace-admin-role/tenant/mobility-zimperium/${IMAGE}:${TAG}"
     - docker push "${AWS_ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ENVIRONMENT}/tenant/mobility-zimperium /${IMAGE}:${TAG}"	
  except:    
        - main     
        - /^release-.*$/

# Job to push the docker image to HCS pdu-test enviornment ecr repo
push-to-ecr-pdu-test:
  stage: push
  image: docker:20.10.24-dind@sha256:7950b072fd43683938a3d73133d473b3c66d3687fe06ddf0c0d2b7f35e289f17
  services:
    - name: docker:dind@sha256:29f11c7c63c84a51c45901701c2d16336c9abc6365d3a69136884b3cf15e2cc9
      command: ["--registry-mirror=https://docker-cache.nonprod.dwpcloud.uk:5000"]
  tags:
    - docker-in-docker
  before_script:
     - apk update
     - apk add --no-cache aws-cli
  script:
     # Assume EKS Namespace Role		
     - TEMP_ROLE=$(aws sts assume-role --role-arn arn:aws:iam::${AWS_ACCOUNT}:role/${AWS_ROLE} --role-session-name hcs-eks-runner-eks)
     - export AWS_ACCESS_KEY_ID=$(echo $TEMP_ROLE | jq -r .Credentials.AccessKeyId)
     - export AWS_SECRET_ACCESS_KEY=$(echo $TEMP_ROLE | jq -r .Credentials.SecretAccessKey)
     - export AWS_SESSION_TOKEN=$(echo $TEMP_ROLE | jq -r .Credentials.SessionToken)
     - aws ecr get-login-password | docker login --username AWS --password-stdin ${AWS_ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ENVIRONMENT}/tenant/mobility-zimperium
     - docker login -u "$JFROG_USERNAME" -p "$JFROG_PASSWORD" "$JFROG_REGISTRY"
     - docker pull "$JFROG_REGISTRY/${IMAGE}:${TAG}"
     - docker tag "$JFROG_REGISTRY/${IMAGE}:${TAG}" 943009210227.dkr.ecr.${AWS_REGION}.amazonaws.com/eks-pdu-test-mobility-namespace-admin-role/tenant/mobility-zimperium/${IMAGE}:${TAG}"
     - docker push 943009210227.dkr.ecr.${AWS_REGION}.amazonaws.com/eks-pdu-test-mobility-namespace-admin-role/tenant/mobility-zimperium /${IMAGE}:${TAG}"	
   except:    
        - main     
        - /^release-.*$/

# Job to push the docker image to HCS pdu-stage enviornment ecr repo
push-to-ecr-pdu-stage:
  stage: push
  image: docker:20.10.24-dind@sha256:7950b072fd43683938a3d73133d473b3c66d3687fe06ddf0c0d2b7f35e289f17
  services:
    - name: docker:dind@sha256:29f11c7c63c84a51c45901701c2d16336c9abc6365d3a69136884b3cf15e2cc9
      command: ["--registry-mirror=https://docker-cache.nonprod.dwpcloud.uk:5000"]
  tags:
    - docker-in-docker
  before_script:
     - apk update
     - apk add --no-cache aws-cli
  script:
     # Assume EKS Namespace Role		
     - TEMP_ROLE=$(aws sts assume-role --role-arn arn:aws:iam::${AWS_ACCOUNT}:role/${AWS_ROLE} --role-session-name hcs-eks-runner-eks)
     - export AWS_ACCESS_KEY_ID=$(echo $TEMP_ROLE | jq -r .Credentials.AccessKeyId)
     - export AWS_SECRET_ACCESS_KEY=$(echo $TEMP_ROLE | jq -r .Credentials.SecretAccessKey)
     - export AWS_SESSION_TOKEN=$(echo $TEMP_ROLE | jq -r .Credentials.SessionToken)
     - aws ecr get-login-password | docker login --username AWS --password-stdin ${AWS_ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ENVIRONMENT}/tenant/mobility-zimperium
     - docker login -u "$JFROG_USERNAME" -p "$JFROG_PASSWORD" "$JFROG_REGISTRY"
     - docker pull "$JFROG_REGISTRY/${IMAGE}:${TAG}"
     - docker tag "$JFROG_REGISTRY/${IMAGE}:${TAG}" 943009210227.dkr.ecr.${AWS_REGION}.amazonaws.com/eks-pdu-stage-mobility-namespace-admin-role/tenant/mobility-zimperium/${IMAGE}:${TAG}"
     - docker push 943009210227.dkr.ecr.${AWS_REGION}.amazonaws.com/eks-pdu-stage-mobility-namespace-admin-role/tenant/mobility-zimperium /${IMAGE}:${TAG}"	
  except:    
        - main     
        - /^release-.*$/

# Job to push the docker image to HCS pdu-prod enviornment ecr repo
push-to-ecr-pdu-prod:
  stage: push
  image: docker:20.10.24-dind@sha256:7950b072fd43683938a3d73133d473b3c66d3687fe06ddf0c0d2b7f35e289f17
  services:
    - name: docker:dind@sha256:29f11c7c63c84a51c45901701c2d16336c9abc6365d3a69136884b3cf15e2cc9
      command: ["--registry-mirror=https://docker-cache.nonprod.dwpcloud.uk:5000"]
  tags:
    - docker-in-docker
  before_script:
     - apk update
     - apk add --no-cache aws-cli
  script:
     # Assume EKS Namespace Role		
     - TEMP_ROLE=$(aws sts assume-role --role-arn arn:aws:iam::${AWS_ACCOUNT}:role/${AWS_ROLE} --role-session-name hcs-eks-runner-eks)
     - export AWS_ACCESS_KEY_ID=$(echo $TEMP_ROLE | jq -r .Credentials.AccessKeyId)
     - export AWS_SECRET_ACCESS_KEY=$(echo $TEMP_ROLE | jq -r .Credentials.SecretAccessKey)
     - export AWS_SESSION_TOKEN=$(echo $TEMP_ROLE | jq -r .Credentials.SessionToken)
     - aws ecr get-login-password | docker login --username AWS --password-stdin ${AWS_ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ENVIRONMENT}/tenant/mobility-zimperium
     - docker login -u "$JFROG_USERNAME" -p "$JFROG_PASSWORD" "$JFROG_REGISTRY"
     - docker pull "$JFROG_REGISTRY/${IMAGE}:${TAG}"
     - docker tag "$JFROG_REGISTRY/${IMAGE}:${TAG}" 943009210227.dkr.ecr.${AWS_REGION}.amazonaws.com/eks-pdu-prod-mobility-namespace-admin-role/tenant/mobility-zimperium/${IMAGE}:${TAG}"
     - docker push 943009210227.dkr.ecr.${AWS_REGION}.amazonaws.com/eks-pdu-prod-mobility-namespace-admin-rol/tenant/mobility-zimperium /${IMAGE}:${TAG}"	
    only:    
       - main
